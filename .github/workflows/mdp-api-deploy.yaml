name: MDP Lambda Deploy Worklfow

on:
  push:
    branches:
      - main
      - develop
      - release/1.0.0
  pull_request:
    branches:
      - main
      - develop
      - release/1.0.0
    types:
      - opened
      - synchronize
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  id-token: write
  contents: read
  checks: read
  statuses: write

env:
  S3_BUCKET: sdp-devops
  S3_CF_TEMPLATE_PATH: cf-templates/${{ github.ref_name == 'release/1.0.0' && 'release' || github.ref_name }}
  S3_ARCHIVE_TEMPLATE_PATH: pipelines/${{ github.ref_name == 'release/1.0.0' && 'release' || github.ref_name }}
  STACK_NAME: mdpapi
  SLACK_ICON: https://images.crunchbase.com/image/upload/c_lpad,h_170,w_170,f_auto,b_white,q_auto:eco,dpr_1/v1455510953/wjkfamfxecnhwk3vs1ik.png

jobs:

  build:
    name: Lambda Deploy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Get Short SHA
        id: sha
        run: |
          echo "COMMIT_SHORT_SHA=$(echo $GITHUB_SHA | cut -c 1-8)" >> $GITHUB_ENV
          echo $S3_BUCKET $S3_UPLOAD_PATH
          echo "main"
      
      - name: Slack Notification for Start
        uses: rtCamp/action-slack-notify@v2
        if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
        env:
          SLACK_CHANNEL: general
          SLACK_COLOR: '#2E3B8B'
          SLACK_ICON: ${{ env.SLACK_ICON }}
          SLACK_MESSAGE: "Job: '${{github.job}}', VERSION: 'commit-${{env.COMMIT_SHORT_SHA}}-build-${{github.run_id}}-${{github.run_number}}'"
          SLACK_TITLE: Started
          SLACK_USERNAME: Github Actions
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}

      - name: Setup Node Environment
        uses: actions/setup-node@v3

      - name: NPM Install
        run: |
          # echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > .npmrc
          # npm install
          npm --version

      - name: NPM Lint & Build
        run: |
          # ./build/configs/generate-config.sh ${stackName} > config.json
          # cat config.json
          # BUILD_TAG=`echo "$BUILD_TAG" | sed 's/%2F1.0.0//'` CONFIG=config.json npm run build
          npm --version

      - name: Upload Artifacts to S3 Bucket CF path
        uses: jakejarvis/s3-sync-action@master
        if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
        with:
          args: |-
            --metadata '{"commit-id":"${{ env.COMMIT_SHORT_SHA }}","workflow-build-number":"${{ github.run_id }}-${{ github.run_number }}"}'
            --recursive
            --include "${{ env.STACK_NAME }}/*.*"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_S3_BUCKET: ${{ env.S3_BUCKET }}
          AWS_REGION: 'us-west-2'
          DEST_DIR: ${{ env.S3_CF_TEMPLATE_PATH }}
          SOURCE_DIR: 'templates'

      - name: Upload Artifacts to S3 Bucket Zip Archive path
        uses: jakejarvis/s3-sync-action@master
        if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
        with:
          args: |-
            --metadata '{"commit-id":"${{ env.COMMIT_SHORT_SHA }}","workflow-build-number":"${{ github.run_id }}-${{ github.run_number }}"}'
            --include "${{ env.STACK_NAME }}.zip"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_S3_BUCKET: ${{ env.S3_BUCKET }}
          AWS_REGION: 'us-west-2'
          DEST_DIR: ${{ env.S3_CF_TEMPLATE_PATH }}
          SOURCE_DIR: 'dist/stacks'

      - name: Slack Notification for Success/Failure
        uses: rtCamp/action-slack-notify@v2
        if: (github.event_name == 'push' || github.event_name == 'workflow_dispatch') && always()
        env:
          SLACK_CHANNEL: general
          SLACK_COLOR: ${{ job.status }}
          SLACK_ICON:  ${{ env.SLACK_ICON }}
          SLACK_MESSAGE: "Job: '${{github.job}}', VERSION: 'commit-${{env.COMMIT_SHORT_SHA}}-build-${{github.run_id}}-${{github.run_number}}'"
          SLACK_TITLE: ${{ job.status }}
          SLACK_USERNAME: Github Actions
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}

          